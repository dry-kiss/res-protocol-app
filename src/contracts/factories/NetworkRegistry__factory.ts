/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NetworkRegistry,
  NetworkRegistryInterface,
} from "../NetworkRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address[]",
        name: "member",
        type: "address[]",
      },
    ],
    name: "MemberAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "MemberRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorAddition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "OperatorRemoval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newMember",
        type: "address",
      },
    ],
    name: "WalletDeployed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
    ],
    name: "addMembers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "clients",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "guardians",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "coSigner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
    ],
    name: "deployWalletToRegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_members",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_operators",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_walletDeployer",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121af806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a61461014e5780638da5cb5b146101585780639870d7fe14610176578063a230c52414610192578063ac8a584a146101c2578063f2fde38b146101de576100a9565b80630b1ca49a146100ae5780631034a7e9146100ca5780635274ac3f146100e65780636d70f7ae146101025780636f4d469b14610132575b600080fd5b6100c860048036038101906100c39190611709565b6101fa565b005b6100e460048036038101906100df9190611837565b6103b4565b005b61010060048036038101906100fb91906117ac565b610601565b005b61011c60048036038101906101179190611709565b610a31565b6040516101299190611bf0565b60405180910390f35b61014c60048036038101906101479190611763565b610a51565b005b610156610cb0565b005b610160610d38565b60405161016d9190611b82565b60405180910390f35b610190600480360381019061018b9190611709565b610d62565b005b6101ac60048036038101906101a79190611709565b610f7d565b6040516101b99190611bf0565b60405180910390f35b6101dc60048036038101906101d79190611709565b610f9d565b005b6101f860048036038101906101f39190611709565b6111bb565b005b33606660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027e90611cab565b60405180910390fd5b81606560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610314576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030b90611d2b565b60405180910390fd5b6000606560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167f270bfc616dd36d5cb6b35aac93e6ef22b089c34e6f6ad6f0892797424840897b60405160405180910390a2505050565b33606660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043890611cab565b60405180910390fd5b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9b01c29878787876040518563ffffffff1660e01b81526004016104a49493929190611b9d565b602060405180830381600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190611736565b90508073ffffffffffffffffffffffffffffffffffffffff1663f2fde38b61051c610d38565b6040518263ffffffff1660e01b81526004016105389190611b82565b600060405180830381600087803b15801561055257600080fd5b505af1158015610566573d6000803e3d6000fd5b505050506001606560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd45d993e8218db32a9aab497e5559fbbebbf9947f314ff03e4d5b5146a8928be816040516105f19190611b82565b60405180910390a1505050505050565b600060019054906101000a900460ff1680610627575060008054906101000a900460ff16155b610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90611c6b565b60405180910390fd5b60008060019054906101000a900460ff1615905080156106b6576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6106be6112b3565b60005b845181101561081357606560008683815181106106e1576106e0611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156107855750600073ffffffffffffffffffffffffffffffffffffffff1685828151811061076457610763611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614155b61078e57600080fd5b6001606560008784815181106107a7576107a6611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061080b90611e6a565b9150506106c1565b5060005b8351811015610969576066600085838151811061083757610836611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156108db5750600073ffffffffffffffffffffffffffffffffffffffff168482815181106108ba576108b9611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614155b6108e457600080fd5b6001606660008684815181106108fd576108fc611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550808061096190611e6a565b915050610817565b5081606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001606660006109b9610d38565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508015610a2b5760008060016101000a81548160ff0219169083151502179055505b50505050565b60666020528060005260406000206000915054906101000a900460ff1681565b33606660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad590611cab565b60405180910390fd5b60005b8251811015610c695760656000848381518110610b0157610b00611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16158015610ba55750600073ffffffffffffffffffffffffffffffffffffffff16838281518110610b8457610b83611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614155b610be4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdb90611d0b565b60405180910390fd5b600160656000858481518110610bfd57610bfc611ee2565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080610c6190611e6a565b915050610ae1565b5081604051610c789190611b6b565b60405180910390207f2c6f2a4b43716eaee3ce4f118954c5b5d34c495438239eafa8cd38545ab8812e60405160405180910390a25050565b610cb861139c565b73ffffffffffffffffffffffffffffffffffffffff16610cd6610d38565b73ffffffffffffffffffffffffffffffffffffffff1614610d2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2390611c8b565b60405180910390fd5b610d3660006113a4565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610d6a61139c565b73ffffffffffffffffffffffffffffffffffffffff16610d88610d38565b73ffffffffffffffffffffffffffffffffffffffff1614610dde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd590611c8b565b60405180910390fd5b80606660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6390611c4b565b60405180910390fd5b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed490611c2b565b60405180910390fd5b6001606660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff167fe96a56aa17dd8ae64ac3a51347e8e8a03d52f1cb2acdf8ed49b20d55662ebecc60405160405180910390a2505050565b60656020528060005260406000206000915054906101000a900460ff1681565b610fa561139c565b73ffffffffffffffffffffffffffffffffffffffff16610fc3610d38565b73ffffffffffffffffffffffffffffffffffffffff1614611019576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101090611c8b565b60405180910390fd5b80606660008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d90611ccb565b60405180910390fd5b6110ae610d38565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561111c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111390611ceb565b60405180910390fd5b6000606660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167f108286147377add4f5f7bcdd7b6104dc6bdac3443e499142a612d418aa0be15460405160405180910390a25050565b6111c361139c565b73ffffffffffffffffffffffffffffffffffffffff166111e1610d38565b73ffffffffffffffffffffffffffffffffffffffff1614611237576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122e90611c8b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156112a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129e90611c0b565b60405180910390fd5b6112b0816113a4565b50565b600060019054906101000a900460ff16806112d9575060008054906101000a900460ff16155b611318576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130f90611c6b565b60405180910390fd5b60008060019054906101000a900460ff161590508015611368576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61137061146a565b611378611543565b80156113995760008060016101000a81548160ff0219169083151502179055505b50565b600033905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff1680611490575060008054906101000a900460ff16155b6114cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c690611c6b565b60405180910390fd5b60008060019054906101000a900460ff16159050801561151f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b80156115405760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680611569575060008054906101000a900460ff16155b6115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90611c6b565b60405180910390fd5b60008060019054906101000a900460ff1615905080156115f8576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61160861160361139c565b6113a4565b80156116295760008060016101000a81548160ff0219169083151502179055505b50565b600061163f61163a84611d70565b611d4b565b9050808382526020820190508285602086028201111561166257611661611f45565b5b60005b858110156116925781611678888261169c565b845260208401935060208301925050600181019050611665565b5050509392505050565b6000813590506116ab8161214b565b92915050565b6000815190506116c08161214b565b92915050565b600082601f8301126116db576116da611f40565b5b81356116eb84826020860161162c565b91505092915050565b60008135905061170381612162565b92915050565b60006020828403121561171f5761171e611f4f565b5b600061172d8482850161169c565b91505092915050565b60006020828403121561174c5761174b611f4f565b5b600061175a848285016116b1565b91505092915050565b60006020828403121561177957611778611f4f565b5b600082013567ffffffffffffffff81111561179757611796611f4a565b5b6117a3848285016116c6565b91505092915050565b6000806000606084860312156117c5576117c4611f4f565b5b600084013567ffffffffffffffff8111156117e3576117e2611f4a565b5b6117ef868287016116c6565b935050602084013567ffffffffffffffff8111156118105761180f611f4a565b5b61181c868287016116c6565b925050604061182d8682870161169c565b9150509250925092565b6000806000806080858703121561185157611850611f4f565b5b600085013567ffffffffffffffff81111561186f5761186e611f4a565b5b61187b878288016116c6565b945050602085013567ffffffffffffffff81111561189c5761189b611f4a565b5b6118a8878288016116c6565b93505060406118b98782880161169c565b92505060606118ca878288016116f4565b91505092959194509250565b60006118e28383611906565b60208301905092915050565b60006118fa8383611924565b60208301905092915050565b61190f81611df1565b82525050565b61191e81611df1565b82525050565b61192d81611df1565b82525050565b600061193e82611dac565b6119488185611dc4565b935061195383611d9c565b8060005b8381101561198457815161196b88826118d6565b975061197683611db7565b925050600181019050611957565b5085935050505092915050565b600061199c82611dac565b6119a68185611dd5565b93506119b183611d9c565b8060005b838110156119e25781516119c988826118ee565b97506119d483611db7565b9250506001810190506119b5565b5085935050505092915050565b6119f881611e03565b82525050565b6000611a0b602683611de0565b9150611a1682611f65565b604082019050919050565b6000611a2e601883611de0565b9150611a3982611fb4565b602082019050919050565b6000611a51601783611de0565b9150611a5c82611fdd565b602082019050919050565b6000611a74602e83611de0565b9150611a7f82612006565b604082019050919050565b6000611a97602083611de0565b9150611aa282612055565b602082019050919050565b6000611aba601783611de0565b9150611ac58261207e565b602082019050919050565b6000611add601783611de0565b9150611ae8826120a7565b602082019050919050565b6000611b00601b83611de0565b9150611b0b826120d0565b602082019050919050565b6000611b23600f83611de0565b9150611b2e826120f9565b602082019050919050565b6000611b46601583611de0565b9150611b5182612122565b602082019050919050565b611b6581611e2f565b82525050565b6000611b778284611991565b915081905092915050565b6000602082019050611b976000830184611915565b92915050565b60006080820190508181036000830152611bb78187611933565b90508181036020830152611bcb8186611933565b9050611bda6040830185611915565b611be76060830184611b5c565b95945050505050565b6000602082019050611c0560008301846119ef565b92915050565b60006020820190508181036000830152611c24816119fe565b9050919050565b60006020820190508181036000830152611c4481611a21565b9050919050565b60006020820190508181036000830152611c6481611a44565b9050919050565b60006020820190508181036000830152611c8481611a67565b9050919050565b60006020820190508181036000830152611ca481611a8a565b9050919050565b60006020820190508181036000830152611cc481611aad565b9050919050565b60006020820190508181036000830152611ce481611ad0565b9050919050565b60006020820190508181036000830152611d0481611af3565b9050919050565b60006020820190508181036000830152611d2481611b16565b9050919050565b60006020820190508181036000830152611d4481611b39565b9050919050565b6000611d55611d66565b9050611d618282611e39565b919050565b6000604051905090565b600067ffffffffffffffff821115611d8b57611d8a611f11565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611dfc82611e0f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b611e4282611f54565b810181811067ffffffffffffffff82111715611e6157611e60611f11565b5b80604052505050565b6000611e7582611e2f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ea857611ea7611eb3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f696e76616c6964206f70657261746f7220616464726573730000000000000000600082015250565b7f6f70657261746f7220616c726561647920657869737473000000000000000000600082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f61646472657373206973206e6f74206f70657261746f72000000000000000000600082015250565b7f6f70657261746f7220646f6573206e6f74206578697374000000000000000000600082015250565b7f63616e27742072656d6f7665206f776e6572206f70657261746f720000000000600082015250565b7f696e76616c6964206d656d626572730000000000000000000000000000000000600082015250565b7f6d656d62657220646f6573206e6f742065786973740000000000000000000000600082015250565b61215481611df1565b811461215f57600080fd5b50565b61216b81611e2f565b811461217657600080fd5b5056fea2646970667358221220c29c7735323cf854c5c510f3a2040ef1a50b7cc83ccdf6a6a0cdc4e4befc286a64736f6c63430008070033";

export class NetworkRegistry__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NetworkRegistry> {
    return super.deploy(overrides || {}) as Promise<NetworkRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NetworkRegistry {
    return super.attach(address) as NetworkRegistry;
  }
  connect(signer: Signer): NetworkRegistry__factory {
    return super.connect(signer) as NetworkRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NetworkRegistryInterface {
    return new utils.Interface(_abi) as NetworkRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NetworkRegistry {
    return new Contract(address, _abi, signerOrProvider) as NetworkRegistry;
  }
}
