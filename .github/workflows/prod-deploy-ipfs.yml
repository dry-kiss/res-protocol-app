name: "Source dApp - Deploy Prod"

on:
  push:
    branches:
      - production

jobs:
  bucket_push:
    runs-on: ubuntu-latest
    name: Deploy to IPFS & Crust
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node Modules
        id: yarn-cache
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install Root Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: SKIP_POSTINSTALL=1 yarn install

      - name: Install React Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          SKIP_POSTINSTALL=1 yarn install

      - name: Build
        env:
          REACT_APP_SUBGRAPH_URL: https://api.thegraph.com/subgraphs/name/resource-network/resource_testnet_prod
          REACT_APP_RESOURCE_URL: https://api.resourcenetwork.co/graphql
          REACT_APP_NETWORK_NAME: celo
          REACT_APP_SOURCE_ADDRESS: "0x74c0C58B99b68cF16A717279AC2d056A34ba2bFe"
        run: |
          export CI=false 
          yarn codegen
          yarn build

      - name: Upload to IPFS & pin via Pinata
        id: upload
        uses: ReSource-Network/ipfs-action@v1.8.1
        with:
          path: ./build
          pinataPinName: production-source-dapp
          service: pinata
          pinataKey: ${{ secrets.PINATA_KEY }}
          pinataSecret: ${{ secrets.PINATA_SECRET }}

      - name: Update DNSLink
        id: dnslink
        uses: ReSource-Network/cloudlfare-dnslink-update@v1.21
        with:
          CID: ${{ steps.upload.outputs.hash }}
          TOKEN: ${{secrets.CLOUDFLARE_TOKEN}}
          ZONE_ID: ${{secrets.CLOUDFLARE_ZONE_ID}}
          RECORD_DOMAIN: "resource.finance"
          RECORD_NAME: "_dnslink.app"
